package shop;

import java.util.ArrayList;
import java.util.List;

import org.json.JSONArray;

import com.kirill.org.Shop.APIResponse;
import com.kirill.org.Shop.Empty;
import com.kirill.org.Shop.Request;
import com.kirill.org.shopGrpc.shopImplBase;

import io.grpc.stub.StreamObserver;

public class ShopService extends shopImplBase {
	public static List<Item> items = new ArrayList<Item>(){{
        add(new Item(1, "tojota A5", 4));
        add(new Item(2, "HTC XC",5));
        add(new Item(3, "BlackBerry",8));
        add(new Item(4, "audi",9));
        add(new Item(5, "bmv",2));
    }};

	@Override
	public void getall(Empty request, StreamObserver<APIResponse> responseObserver) {
			
		APIResponse.Builder response = APIResponse.newBuilder();
		JSONArray ja = new JSONArray();
		ja.put(items);
		
		response.setResponseCode(0).setResponsemessage(ja.toString());
	
		responseObserver.onNext(response.build());
		responseObserver.onCompleted();
	}

	@Override
	public void getOne(Request request, StreamObserver<APIResponse> responseObserver) {
		int id = request.getId();
		
		Item reqItem = getItem(String.valueOf(id));				
		
		APIResponse.Builder response = APIResponse.newBuilder();
		if(id > items.size()) {
			response.setResponseCode(1).setResponsemessage("out of range");
		}else {
			response.setResponseCode(0).setResponsemessage("item is " + reqItem.getDescr());
		}
		
		
						
		responseObserver.onNext(response.build());
		responseObserver.onCompleted();
	}
	
	 private Item getItem(String id) {
	        return items.stream()
	                .filter(t -> Integer.parseInt(id)==t.getId())
	                .findFirst()
	                .orElse(null);
	    }




}
